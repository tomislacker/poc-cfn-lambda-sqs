###
# References
# - https://www.itonaut.com/2018/07/11/sqs-queue-as-lambda-trigger-in-aws-cloudformation/
# - https://gist.github.com/LukasMusebrink/30b72b4d739b470fe6f073b9126a8ab6#file-template-yaml
###
---
AWSTemplateFormatVersion : 2010-09-09
Parameters: {}

Outputs:
  TopicArn:
    Value: !Ref ExampleTopic

Resources:
  ExampleTopic:
    Type: AWS::SNS::Topic

  ExampleQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      VisibilityTimeout: 30

  ExampleQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Id: QueuePolicy
        Statement:
          - Sid: QueuePolicy
            Effect: Allow
            Principal: '*'
            Action: sqs:SendMessage
            Resource: !GetAtt ExampleQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref ExampleTopic
      Queues:
        - !Ref ExampleQueue

  ProcessingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ProcessingLambdaFunction
      Principal: sqs.amazonaws.com
      SourceArn: !GetAtt ExampleQueue.Arn
      SourceAccount: !Ref AWS::AccountId

  ProcessingLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: allowLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: arn:aws:logs:*:*:*
        - PolicyName: getAndDeleteMessages
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ChangeMessageVisibility
              Resource: !GetAtt ExampleQueue.Arn

  ProcessingLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import json


          def process_record(r):
            msg = json.loads(r['body'])
            subj = msg['Subject']
            sns_topic = msg['TopicArn']
            received_at = msg['Timestamp']

            print(f'Received message at {received_at} from {sns_topic}')
            print(f'Message:\n{msg["Message"]}')

          def handler(event, context):
            print(f'Received {len(event["Records"])} records')
            for record in event['Records']:
              process_record(record)

      Handler: index.handler
      Role: !GetAtt ProcessingLambdaExecutionRole.Arn
      Runtime: python3.6
      MemorySize: 128
      Timeout: 30

  ProcessingLambdaEventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt ExampleQueue.Arn
      FunctionName: !GetAtt ProcessingLambdaFunction.Arn

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ProcessingLambdaFunction}
      RetentionInDays: 3

# vim:expandtab:ft=yaml.cloudformation:sw=2:ts=2
